# file:
# synopsis:
---
- name: Ensure Mosquitto namespace exists
  k8s:
    name: "{{mosquitto_namespace}}"
    api_version: v1
    kind: Namespace
    state: present
  delegate_to: localhost
  run_once: true

- name: Create Mosquitto Deployment
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mosquitto
        namespace: "{{mosquitto_namespace}}"
      spec:
        selector:
          matchLabels:
            app: mosquitto
        template:
          metadata:
            labels:
              app: mosquitto
              type: primary
          spec:
            containers:
              - image: eclipse-mosquitto:{{mosquitto_version}}
                name: mosquitto
                ports:
                  - containerPort: 1883
                  - containerPort: 9001
                command:
                  - mosquitto
                args:
                  - -c
                  - /mosquitto-no-auth.conf
            securityContext:
              runAsUser: 1883
              runAsGroup: 1883
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values: [mosquitto]
                  topologyKey: kubernetes.io/hostname

- name: Create Mosquitto load-balanced service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mosquitto
        namespace: "{{mosquitto_namespace}}"
      spec:
        ports:
          - name: mqtt
            port: 1883
            targetPort: 1883
          - name: wss
            port: 9001
            targetPort: 9001
        selector:
          app: mosquitto
        type: LoadBalancer
        externalTrafficPolicy: Local
        loadBalancerIP: "{{mosquitto_lb_address}}"

- name: Create Mosquitto HA config
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ConfigMap
      metadata:
        name: bridge-conf
        namespace: "{{mosquitto_namespace}}"
      data:
        mosquitto.conf: |
          listener 1883
          allow_anonymous true

          connection broker0
          address mosquitto-p.automation
          topic # both 0

- name: Create Mosquitto primary service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Service
      metadata:
        name: mosquitto-p
        namespace: "{{mosquitto_namespace}}"
      spec:
        ports:
          - name: mqtt
            port: 1883
            targetPort: 1883
        selector:
          app: mosquitto
          type: primary

- name: Create Mosquitto primary service
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: mosquitto-b
        namespace: "{{mosquitto_namespace}}"
      spec:
        selector:
          matchLabels:
            app: mosquitto
        template:
          metadata:
            labels:
              app: mosquitto
              type: bridge
          spec:
            affinity:
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - key: app
                      operator: In
                      values:
                      - mosquitto
                  topologyKey: kubernetes.io/hostname
            containers:
            - args:
              - -c
              - /mosquitto/config/mosquitto.conf
              command:
              - mosquitto
              image: eclipse-mosquitto:{{mosquitto_version}}
              name: mosquitto
              ports:
              - containerPort: 1883
              - containerPort: 9001
              volumeMounts:
              - mountPath: /mosquitto/config
                name: config
            securityContext:
              runAsGroup: 1883
              runAsUser: 1883
            volumes:
            - configMap:
                name: bridge-conf
              name: config
